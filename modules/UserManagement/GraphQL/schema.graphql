"""
User management related queries
"""
type Query {
    """
    Get currently authenticated user
    """
    me: User @auth
    
    """
    Get all users (requires authentication)
    """
    users: [User!]! @auth
}

type Mutation {
    createUser(input: CreateUserInput!): User @field(resolver: "Modules\\UserManagement\\Http\\Controllers\\UserResolver@create")
}

type Mutation {
    login(email: String!, password: String!): LoginResponse!
    @field(resolver: "Modules\\UserManagement\\GraphQL\\Mutations\\Login")
}

input CreateUserInput {
    name: String!
    email: String!
    password: String!
    role_id: ID!
}

"""
User object
"""
type User {
    id: ID!
    name: String!
    email: String!
    created_at: String
    updated_at: String
}

type Role {
    id: ID!
    name: String!
    description: String
}

type LoginResponse {
    access_token: String!
    token_type: String!
    expires_in: Int!
    user: User!
}
