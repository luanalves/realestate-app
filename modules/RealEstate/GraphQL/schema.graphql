"""
Schema GraphQL para o módulo RealEstate
"""

"""
RealEstate representa uma imobiliária no sistema
"""
type RealEstate implements Organization {
    "ID única da organização"
    id: ID!
    
    "Nome da organização"
    name: String!
    
    "Nome fantasia da imobiliária"
    fantasyName: String
    
    "CNPJ da imobiliária"
    cnpj: String
    
    "Descrição da organização"
    description: String
    
    "Email de contato principal"
    email: String
    
    "Telefone de contato principal"
    phone: String
    
    "Website da organização"
    website: String
    
    "Número do CRECI da imobiliária"
    creci: String
    
    "Inscrição estadual"
    stateRegistration: String
    
    "Indica se a organização está ativa"
    active: Boolean!
    
    "Membros da organização"
    members: [OrganizationMembership!]! @morphMany
    
    "Membros ativos da organização"
    activeMembers: [OrganizationMembership!]! @morphMany(relation: "activeMembers")
    
    "Endereço principal da organização"
    mainAddress: OrganizationAddress
    
    "Endereços da organização"
    addresses: [OrganizationAddress!]!
    
    "Data de criação"
    createdAt: DateTime!
    
    "Data da última atualização"
    updatedAt: DateTime!
}

"""
Input para criação de uma imobiliária
"""
input CreateRealEstateInput {
    "Nome da organização"
    name: String! @rules(apply: ["required", "string", "max:255"])
    
    "Nome fantasia da imobiliária"
    fantasyName: String @rules(apply: ["nullable", "string", "max:255"])
    
    "CNPJ da imobiliária"
    cnpj: String! @rules(apply: ["required", "string", "size:14", "unique:organizations,cnpj"])
    
    "Descrição da organização"
    description: String @rules(apply: ["nullable", "string", "max:1000"])
    
    "Email de contato principal"
    email: String! @rules(apply: ["required", "email", "unique:organizations,email"])
    
    "Telefone de contato principal"
    phone: String @rules(apply: ["nullable", "string", "max:20"])
    
    "Website da organização"
    website: String @rules(apply: ["nullable", "url", "max:255"])
    
    "Número do CRECI da imobiliária"
    creci: String @rules(apply: ["nullable", "string", "max:50"])
    
    "Inscrição estadual"
    stateRegistration: String @rules(apply: ["nullable", "string", "max:50"])
    
    "Indica se a organização está ativa"
    active: Boolean = true
    
    "Endereço principal da organização"
    address: OrganizationAddressInput
}

"""
Input para atualização de uma imobiliária
"""
input UpdateRealEstateInput {
    "Nome da organização"
    name: String @rules(apply: ["nullable", "string", "max:255"])
    
    "Nome fantasia da imobiliária"
    fantasyName: String @rules(apply: ["nullable", "string", "max:255"])
    
    "Descrição da organização"
    description: String @rules(apply: ["nullable", "string", "max:1000"])
    
    "Email de contato principal"
    email: String @rules(apply: ["nullable", "email"])
    
    "Telefone de contato principal"
    phone: String @rules(apply: ["nullable", "string", "max:20"])
    
    "Website da organização"
    website: String @rules(apply: ["nullable", "url", "max:255"])
    
    "Número do CRECI da imobiliária"
    creci: String @rules(apply: ["nullable", "string", "max:50"])
    
    "Inscrição estadual"
    stateRegistration: String @rules(apply: ["nullable", "string", "max:50"])
    
    "Representante legal"
    legalRepresentative: String @rules(apply: ["nullable", "string", "max:255"])
    
    "Indica se a organização está ativa"
    active: Boolean
}

"""
Tipo para representar um resultado paginado de imobiliárias
"""
type RealEstatePaginator {
    "Dados das imobiliárias nesta página"
    data: [RealEstate!]!
    
    "Informações sobre a paginação"
    paginatorInfo: PaginatorInfo!
}

extend type Query {
    "Listar todas as imobiliárias"
    realEstates(
        first: Int = 10
        page: Int = 1
        orderBy: [OrderByClause!]
    ): RealEstatePaginator! @paginate(model: "Modules\\RealEstate\\Models\\RealEstate", scopes: ["active"])

    "Obter uma imobiliária específica pelo ID ou CNPJ"
    realEstate(id: ID, cnpj: String): RealEstate 
        @field(resolver: "Modules\\RealEstate\\GraphQL\\Queries\\RealEstateResolver")
}

extend type Mutation {
    "Criar uma nova imobiliária"
    createRealEstate(
        input: CreateRealEstateInput!
    ): RealEstate! @field(resolver: "Modules\\RealEstate\\GraphQL\\Mutations\\CreateRealEstateResolver")
    
    "Atualizar uma imobiliária existente"
    updateRealEstate(
        id: ID!,
        input: UpdateRealEstateInput! @spread
    ): RealEstate! @field(resolver: "Modules\\RealEstate\\GraphQL\\Mutations\\UpdateRealEstateResolver")
    
    "Remover uma imobiliária"
    deleteRealEstate(id: ID!): RealEstate! @field(resolver: "Modules\\RealEstate\\GraphQL\\Mutations\\DeleteRealEstateResolver")
}
